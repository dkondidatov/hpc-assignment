- name: 'Install : Download latest slurm package'
  become: true
  ansible.builtin.get_url:
    url: "{{ slurm_download_url }}"
    dest: "{{ slurm_download_dir }}"
    owner: "slurm"
    group: "slurm"
    mode: '0644'

- name: 'Install : Unarchive slurm to "{{ slurm_download_dir }}"'
  become: true
  ansible.builtin.unarchive:
    src: "{{ slurm_download_dir }}/{{ slurm_package_name }}.{{ slurm_package_extension }}"
    dest: "{{ slurm_download_dir }}"
    owner: "slurm"
    group: "slurm"

- name: "Clean-up : Remove package archive {{ slurm_download_dir }}/{{ slurm_package_name }}.{{ slurm_package_extension }}"
  ansible.builtin.file: 
    name: "{{ slurm_download_dir }}/{{ slurm_package_name }}.{{ slurm_package_extension }}"
    state: absent 
  ignore_errors: true

- name: 'Install : Run slurm configure script'
  become: true
  ansible.builtin.shell:
  args:
    chdir: "{{ slurm_download_dir }}/{{ slurm_package_name }}"
    cmd: "./configure --prefix={{ slurm_prefix }} --with-pmix=/usr/lib/x86_64-linux-gnu/pmix2"

- name: 'Install : Run slurm make script'
  become: true
  ansible.builtin.shell:
  args:
    chdir: "{{ slurm_download_dir }}/{{ slurm_package_name }}"
    cmd: "make"

- name: 'Install : Run slurm make install script'
  become: true
  ansible.builtin.shell:
  args:
    chdir: "{{ slurm_download_dir }}/{{ slurm_package_name }}"
    cmd: "make install"

- name: 'Install : Set parameters for /etc/slurm'
  become: true
  ansible.builtin.file:
    path: '/etc/slurm'
    state: directory
    mode: '0755'
    owner: slurm
    group: slurm

- name: 'Install : Set parameters for /var/spool/slurm'
  become: true
  ansible.builtin.file:
    path: '/var/spool/slurm'
    state: directory
    mode: '0750'
    owner: slurm
    group: slurm

- name: 'Install : Set parameters for /var/spool/slurmctld'
  become: true
  ansible.builtin.file:
    path: '/var/spool/slurmctld'
    state: directory
    mode: '0750'
    owner: slurm
    group: slurm

- name: 'Install : Set parameters for /var/log/slurm'
  become: true
  ansible.builtin.file:
    path: '/var/log/slurm'
    state: directory
    mode: '0755'
    owner: slurm
    group: slurm

- name: 'Install : Template a slurm.conf to "/etc/slurm/cgroup.conf"'
  ansible.builtin.template:
    src: cgroup.conf.j2
    dest: '/etc/slurm/cgroup.conf'
    mode: '0644'
    owner: slurm
    group: slurm
  notify: 
    - 'Handlers : Restart systemd service: "slurmctld.service"'
    - 'Handlers : Restart systemd service: "slurmdbd.service"'
    - 'Handlers : Restart systemd service: "slurmd.service"'

- name: 'Install : Template a slurm.conf to /etc/slurm/slurm.conf'
  ansible.builtin.template:
    src: slurm.conf.j2
    dest: '/etc/slurm/slurm.conf'
    mode: '0644'
    owner: slurm
    group: slurm
  notify: 
    - 'Handlers : Restart systemd service: "slurmctld.service"'
    - 'Handlers : Restart systemd service: "slurmdbd.service"'
    - 'Handlers : Restart systemd service: "slurmd.service"'

- name: 'Install: Configure slurm for master node'
  block:

  - name: 'Install : Set parameters for /etc/slurm/slurmdbd.conf'
    become: true
    ansible.builtin.template:
      dest: '/etc/slurm/slurmdbd.conf'
      src: 'slurmdbd.service.j2'
      mode: '0640'
      owner: slurm
      group: slurm
    notify: 
    - 'Handlers : Restart systemd service: "slurmdbd.service"'

  - name: 'Install : Set parameters for /var/log/slurm/slurmd.log'
    become: true
    ansible.builtin.file:
      path: '/var/log/slurm/slurmd.log'
      state: touch
      mode: '0640'
      owner: slurm
      group: slurm

  - name: 'Install : Set parameters for /var/log/slurm/slurmctld.log'
    become: true
    ansible.builtin.file:
      path: '/var/log/slurm/slurmctld.log'
      state: touch
      mode: '0640'
      owner: slurm
      group: slurm

  - name: 'Install : Set parameters for /var/log/slurm/slurm_jobacct.log'
    become: true
    ansible.builtin.file:
      path: '/var/log/slurm/slurm_jobacct.log'
      state: touch
      mode: '0640'
      owner: slurm
      group: slurm

  - name: 'Install : Set parameters for /var/log/slurm/slurm_jobcomp.log'
    become: true
    ansible.builtin.file:
      path: '/var/log/slurm/slurm_jobcomp.log'
      state: touch
      mode: '0640'
      owner: slurm
      group: slurm

  - name: 'Install : Set parameters for "{{ lustre_mount_path }}/slurm"'
    become: true
    ansible.builtin.file:
      path: '/mnt/fsx/slurm'
      state: directory
      mode: '0777'
      owner: slurm
      group: slurm

  - name: 'Install : Copy systemd service: "slurmdbd.service"'
    become: true
    ansible.builtin.template:
      dest: '/lib/systemd/system/slurmdbd.service'
      src: 'slurmdbd.service.j2'
      mode: '0640'
      owner: slurm
      group: slurm
    notify: 
    - 'Handlers : Restart systemd service: "slurmdbd.service"'


  - name: 'Install : Copy systemd service: "slurmctld.service"'
    become: true
    ansible.builtin.template:
      dest: '/lib/systemd/system/slurmctld.service'
      src: 'slurmctld.service.j2'
      mode: '0640'
      owner: slurm
      group: slurm
    notify: 
    - 'Handlers : Restart systemd service: "slurmctld.service"'

  - name: 'Install : Start and enable slurmdbd daemon'
    become: true
    ansible.builtin.systemd_service:
      name: slurmdbd
      state: started
      daemon-reload: true
      enabled: true

  - name: 'Install : Start and enable slurmctld daemon'
    become: true
    ansible.builtin.systemd_service:
      name: slurmctld
      state: started
      daemon-reload: true
      enabled: true

  when: hostvars[inventory_hostname].master_node is defined and hostvars[inventory_hostname].master_node

- name: 'Install: Configure slurm for worker node'
  block:
  - name: 'Install : Set parameters for /var/log/slurm/slurmd.log'
    become: true
    ansible.builtin.file:
      path: '/var/log/slurm/slurmd.log'
      state: touch
      mode: '0640'
      owner: slurm
      group: slurm

  - name: 'Install : Template systemd service: "slurmd.service"'
    become: true
    ansible.builtin.template:
      dest: '/lib/systemd/system/slurmd.service'
      src: 'slurmd.service.j2'
      mode: '0640'
      owner: slurm
      group: slurm
    notify: 
    - 'Handlers : Restart systemd service: "slurmd.service"'

  - name: 'Install : Enable slurm daemon'
    become: true
    ansible.builtin.systemd_service:
      name: slurmd
      daemon-reload: true
      state: started
      enabled: true

  when: hostvars[inventory_hostname].worker_node is defined and hostvars[inventory_hostname].worker_node
